server {
    listen 80;
    listen [::]:80;
    server_name yagapp.ru www.yagapp.ru;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }
}

# HTTP: редирект на HTTPS и проброс certbot для Let's Encrypt
# server {
#     listen 80;
#     listen [::]:80;
#     server_name yagapp.ru www.yagapp.ru;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     # Редирект всего остального на HTTPS
#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# # HTTPS сервер
# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     http2 on;
#     server_name yagapp.ru www.yagapp.ru;

#     # Пути к сертификатам (Let's Encrypt)
#     ssl_certificate /etc/letsencrypt/live/yagapp.ru/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/yagapp.ru/privkey.pem;

#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;

#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;

#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 8.8.8.8;

#     # Безопасные заголовки
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header Referrer-Policy "no-referrer-when-downgrade" always;
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

#     # Статика React-приложения
#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri /index.html;
#     }

#     # API proxy_pass на сервер
#     location /api/ {
#         proxy_pass http://server:8000/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }
